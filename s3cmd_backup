#!/usr/bin/perl

# v1.1.0
#
# On debian distros, you can get XML::Simple with:
# apt-get install libxml-simple-perl

	# make sure it's not already running
	use Sys::RunAlone;

	use strict;
	use XML::Simple;
	use POSIX qw/strftime/;

	my $s3cmd_xml;
	if (-e './s3cmd_backup.conf') {
		$s3cmd_xml = './s3cmd_backup.conf';
	}
	elsif (-e '~/.s3cmd_backup.conf') {
		$s3cmd_xml = '~/.s3cmd_backup.conf';
	}
	elsif (-e "/etc/s3cmd_backup.conf") {
		$s3cmd_xml = '/etc/s3cmd_backup.conf';
	}
	else {
		die "Could not find xml configuration file.";
	}

	my $config = XMLin(
		$s3cmd_xml,
		ForceArray => ['backup', 'directory']
	);

	my $s3cmd = trim($config->{config}->{s3cmd}) || '/usr/bin/s3cmd';
	my $s3_config_file = trim($config->{config}->{s3_config_file}) || '~/.s3cfg';
	my $global_params = trim($config->{config}->{params}) || '';
	my $mail_path = trim($config->{config}->{mail_path}) || '/usr/bin/mail';
	my $email_address = trim($config->{config}->{email_address}) || '';
	my $email_subject = trim($config->{config}->{email_subject}) || 's3cmd Backup';
	my $temp_file = trim($config->{config}->{temp_file}) || '/tmp/s3cmd_backup.log';

	# build commands
	#
	my @commands;
	foreach my $backup (@{$config->{backup}}) {
		my $source = trim($backup->{source}); $source = '' if $source eq '/';
		my $destination = trim($backup->{destination});
		my $params = trim($backup->{params});
		foreach my $dir (@{$backup->{directory}}) {
			my $dir_params = trim($dir->{params}) if $dir->{params};
			my $dir_path = trim($dir->{path}) . '/';
			$dir_path =~ s/\/{2,}$/\//s;
			my $cmd = "$s3cmd sync -c $s3_config_file $global_params $dir_params ";
			$cmd .= "$source/$dir_path $destination/$dir_path ";
			push @commands, { command => $cmd, caption => "From: $source/$dir_path\nTo: $destination/$dir_path" };
		}
	}

	# exec commands
	#
	open LOG, ">$temp_file";
	print LOG "s3cmd Backup...\n\n";
	print LOG "Started at: " . strftime('%F %r',localtime) . "\n";
	foreach my $command (@commands) {
		my $log = '';
		$log .= "\n" . '-' x 40 . "\n";
		$log .= "$command->{caption}";
		$log .= "\n" . '-' x 40 . "\n";
		# print "$command\n\n";
		open C, "$command->{command} 2>/dev/null |";
		while (<C>) { $log .= $_ }
		close C;
		print LOG $log;
	}
	print LOG "\n" . '-' x 40 . "\n";
	print LOG "Ended at: " . strftime('%F %r',localtime) . "\n\n";

	# email the log
	#
	if ($email_address) {
		system "cat $temp_file | $mail_path -s \"$email_subject\" $email_address";
	}


# ------------------------------------------------------

sub trim {
	my $val = shift;
	for ($val) { s/^\s+//; s/\s+$//; }
	return $val;
}

# ------------------------------------------------------

# needed for Sys::RunAlone
__END__

